# -*- coding: utf-8 -*-
"""salary_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xiHus4RMIkBWjFQJwl-Kwah38QP7I4-n
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
from matplotlib.pyplot import xticks
from matplotlib.pyplot import yticks

df = pd.DataFrame(pd.read_csv("Salary Data.csv"))
df

df.shape

df.describe()

df.columns

df.shape

df.info()

# Checking Null values
df.isnull().sum()
# There are no NULL values in the dataset, hence it is clean.

df = df.dropna()

# EDA

df.keys()

auto = df

# Dimension reduction

gender = pd.get_dummies(df['Gender'], drop_first = True)
gender

auto = pd.concat([auto, gender], axis = 1)
auto

edu_typ = pd.get_dummies(auto['Education Level'], drop_first = False)
edu_typ

auto = pd.concat([auto, edu_typ], axis = 1)
auto

auto

auto.drop(['Gender','Education Level','Job Title'], axis = 1, inplace = True)

auto

# Starting machine learning
import seaborn as sns
plt.figure(figsize=(15,5))
sns.heatmap(auto.corr(),annot=True)
plt.show()

from sklearn.model_selection import train_test_split

# We specify this so that the train and test data set always have the same rows, respectively
df_train, df_test = train_test_split(auto, train_size = 0.7, test_size = 0.3, random_state = 1)

df_train

df_test

list(auto.keys())

from sklearn.linear_model import LinearRegression
X_train = df_train[['Age','Years of Experience','Male',"Bachelor's","Master's",'PhD']]
y_train = df_train[['Salary']]
# # df_test_predict = X_train.iloc[0:1]

X_train

y_train

lm = LinearRegression()
model = lm.fit(X_train, y_train)

# Testing
data = df_test.iloc[0:1]
actual_salary = data.pop('Salary')

print(data)
predicted_salary = model.predict(data)
print("Actual salary",actual_salary)
print("predicted expenses",predicted_salary)

# print(df_test.iloc[0:1])

age = int(input("Enter age = "))
exp = float(input("Enter exp = "))
male = int(input("Enter 1 for male 0 for female"))

edu = int(input("Enter 1 for bach 2 for master 3 for phd = "))
if edu == 1:
  bach = 1
  mast = 0
  phd = 0
elif edu == 2:
  bach = 0
  mast = 1
  phd = 0

else:
  bach = 0
  mast = 0
  phd = 1

data = pd.DataFrame({'Age':[age],'Years of Experience':[exp],'Male':[male],"Bachelor's":[bach],"Master's":[mast],
                     'PhD':[phd]})
data

predicted_salary = model.predict(data)
print(round(predicted_salary[0][0],2))

